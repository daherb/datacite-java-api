/*
 * REST API
 * The REST API is used for all API interactions with DataCite services.
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@datacite.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.datacite.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.datacite.JSON;

/**
 * ActivityDataAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-04T16:42:13.755252895+02:00[Europe/Prague]")
public class ActivityDataAttributes {
  public static final String SERIALIZED_NAME_PROV_COLON_WAS_GENERATED_BY = "prov:wasGeneratedBy";
  @SerializedName(SERIALIZED_NAME_PROV_COLON_WAS_GENERATED_BY)
  private String provColonWasGeneratedBy;

  public static final String SERIALIZED_NAME_PROV_COLON_GENERATED_AT_TIME = "prov:generatedAtTime";
  @SerializedName(SERIALIZED_NAME_PROV_COLON_GENERATED_AT_TIME)
  private String provColonGeneratedAtTime;

  public static final String SERIALIZED_NAME_PROV_COLON_WAS_DERIVED_FROM = "prov:wasDerivedFrom";
  @SerializedName(SERIALIZED_NAME_PROV_COLON_WAS_DERIVED_FROM)
  private String provColonWasDerivedFrom;

  public static final String SERIALIZED_NAME_PROV_COLON_WAS_ATTRIBUTED_TO = "prov:wasAttributedTo";
  @SerializedName(SERIALIZED_NAME_PROV_COLON_WAS_ATTRIBUTED_TO)
  private String provColonWasAttributedTo;

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private BigDecimal version;

  public static final String SERIALIZED_NAME_CHANGES = "changes";
  @SerializedName(SERIALIZED_NAME_CHANGES)
  private Object changes;

  public ActivityDataAttributes() {
  }

  public ActivityDataAttributes provColonWasGeneratedBy(String provColonWasGeneratedBy) {
    
    this.provColonWasGeneratedBy = provColonWasGeneratedBy;
    return this;
  }

   /**
   * Get provColonWasGeneratedBy
   * @return provColonWasGeneratedBy
  **/
  @javax.annotation.Nullable

  public String getProvColonWasGeneratedBy() {
    return provColonWasGeneratedBy;
  }


  public void setProvColonWasGeneratedBy(String provColonWasGeneratedBy) {
    this.provColonWasGeneratedBy = provColonWasGeneratedBy;
  }


  public ActivityDataAttributes provColonGeneratedAtTime(String provColonGeneratedAtTime) {
    
    this.provColonGeneratedAtTime = provColonGeneratedAtTime;
    return this;
  }

   /**
   * Get provColonGeneratedAtTime
   * @return provColonGeneratedAtTime
  **/
  @javax.annotation.Nullable

  public String getProvColonGeneratedAtTime() {
    return provColonGeneratedAtTime;
  }


  public void setProvColonGeneratedAtTime(String provColonGeneratedAtTime) {
    this.provColonGeneratedAtTime = provColonGeneratedAtTime;
  }


  public ActivityDataAttributes provColonWasDerivedFrom(String provColonWasDerivedFrom) {
    
    this.provColonWasDerivedFrom = provColonWasDerivedFrom;
    return this;
  }

   /**
   * Get provColonWasDerivedFrom
   * @return provColonWasDerivedFrom
  **/
  @javax.annotation.Nullable

  public String getProvColonWasDerivedFrom() {
    return provColonWasDerivedFrom;
  }


  public void setProvColonWasDerivedFrom(String provColonWasDerivedFrom) {
    this.provColonWasDerivedFrom = provColonWasDerivedFrom;
  }


  public ActivityDataAttributes provColonWasAttributedTo(String provColonWasAttributedTo) {
    
    this.provColonWasAttributedTo = provColonWasAttributedTo;
    return this;
  }

   /**
   * Get provColonWasAttributedTo
   * @return provColonWasAttributedTo
  **/
  @javax.annotation.Nullable

  public String getProvColonWasAttributedTo() {
    return provColonWasAttributedTo;
  }


  public void setProvColonWasAttributedTo(String provColonWasAttributedTo) {
    this.provColonWasAttributedTo = provColonWasAttributedTo;
  }


  public ActivityDataAttributes action(String action) {
    
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @javax.annotation.Nullable

  public String getAction() {
    return action;
  }


  public void setAction(String action) {
    this.action = action;
  }


  public ActivityDataAttributes version(BigDecimal version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable

  public BigDecimal getVersion() {
    return version;
  }


  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  public ActivityDataAttributes changes(Object changes) {
    
    this.changes = changes;
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @javax.annotation.Nullable

  public Object getChanges() {
    return changes;
  }


  public void setChanges(Object changes) {
    this.changes = changes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityDataAttributes activityDataAttributes = (ActivityDataAttributes) o;
    return Objects.equals(this.provColonWasGeneratedBy, activityDataAttributes.provColonWasGeneratedBy) &&
        Objects.equals(this.provColonGeneratedAtTime, activityDataAttributes.provColonGeneratedAtTime) &&
        Objects.equals(this.provColonWasDerivedFrom, activityDataAttributes.provColonWasDerivedFrom) &&
        Objects.equals(this.provColonWasAttributedTo, activityDataAttributes.provColonWasAttributedTo) &&
        Objects.equals(this.action, activityDataAttributes.action) &&
        Objects.equals(this.version, activityDataAttributes.version) &&
        Objects.equals(this.changes, activityDataAttributes.changes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(provColonWasGeneratedBy, provColonGeneratedAtTime, provColonWasDerivedFrom, provColonWasAttributedTo, action, version, changes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityDataAttributes {\n");
    sb.append("    provColonWasGeneratedBy: ").append(toIndentedString(provColonWasGeneratedBy)).append("\n");
    sb.append("    provColonGeneratedAtTime: ").append(toIndentedString(provColonGeneratedAtTime)).append("\n");
    sb.append("    provColonWasDerivedFrom: ").append(toIndentedString(provColonWasDerivedFrom)).append("\n");
    sb.append("    provColonWasAttributedTo: ").append(toIndentedString(provColonWasAttributedTo)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("prov:wasGeneratedBy");
    openapiFields.add("prov:generatedAtTime");
    openapiFields.add("prov:wasDerivedFrom");
    openapiFields.add("prov:wasAttributedTo");
    openapiFields.add("action");
    openapiFields.add("version");
    openapiFields.add("changes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ActivityDataAttributes
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ActivityDataAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivityDataAttributes is not found in the empty JSON string", ActivityDataAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ActivityDataAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivityDataAttributes` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("prov:wasGeneratedBy") != null && !jsonObj.get("prov:wasGeneratedBy").isJsonNull()) && !jsonObj.get("prov:wasGeneratedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prov:wasGeneratedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prov:wasGeneratedBy").toString()));
      }
      if ((jsonObj.get("prov:generatedAtTime") != null && !jsonObj.get("prov:generatedAtTime").isJsonNull()) && !jsonObj.get("prov:generatedAtTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prov:generatedAtTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prov:generatedAtTime").toString()));
      }
      if ((jsonObj.get("prov:wasDerivedFrom") != null && !jsonObj.get("prov:wasDerivedFrom").isJsonNull()) && !jsonObj.get("prov:wasDerivedFrom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prov:wasDerivedFrom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prov:wasDerivedFrom").toString()));
      }
      if ((jsonObj.get("prov:wasAttributedTo") != null && !jsonObj.get("prov:wasAttributedTo").isJsonNull()) && !jsonObj.get("prov:wasAttributedTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prov:wasAttributedTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prov:wasAttributedTo").toString()));
      }
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivityDataAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivityDataAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivityDataAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivityDataAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivityDataAttributes>() {
           @Override
           public void write(JsonWriter out, ActivityDataAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivityDataAttributes read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ActivityDataAttributes given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ActivityDataAttributes
  * @throws IOException if the JSON string is invalid with respect to ActivityDataAttributes
  */
  public static ActivityDataAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivityDataAttributes.class);
  }

 /**
  * Convert an instance of ActivityDataAttributes to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

